# Generated by Django 4.2.20 on 2025-10-21 11:18

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mastery.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('title', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(null=True)),
                ('sort_order', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('feide_id', models.CharField(max_length=200, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('valid_from', models.DateTimeField(null=True)),
                ('valid_to', models.DateTimeField(null=True)),
                ('is_enabled', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('feide_id', models.CharField(max_length=200, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('short_name', models.CharField(max_length=10, null=True)),
                ('org_number', models.CharField(max_length=50)),
                ('owner', models.CharField(max_length=200, null=True)),
                ('is_service_enabled', models.BooleanField(default=False)),
                ('is_group_goal_enabled', models.BooleanField(default=True)),
                ('is_student_list_enabled', models.BooleanField(default=False)),
                ('subjects_allowed', models.CharField(default='all', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=200)),
                ('feide_id', models.CharField(max_length=200, unique=True)),
                ('email', models.CharField(max_length=200)),
                ('last_activity_at', models.DateTimeField(null=True)),
                ('disabled_at', models.DateTimeField(null=True)),
                ('is_superadmin', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSchool',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_schools', to='mastery.role')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_schools', to='mastery.school')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_schools', to='mastery.user')),
            ],
            options={
                'unique_together': {('user', 'school', 'role')},
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='mastery.group')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='mastery.role')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='mastery.user')),
            ],
            options={
                'unique_together': {('user', 'group', 'role')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(null=True, related_name='members', through='mastery.UserGroup', to='mastery.group'),
        ),
        migrations.AddField(
            model_name='user',
            name='schools',
            field=models.ManyToManyField(related_name='staff', through='mastery.UserSchool', to='mastery.school'),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user'),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('display_name', models.CharField(max_length=200)),
                ('short_name', models.CharField(max_length=200)),
                ('grep_code', models.CharField(max_length=200, null=True)),
                ('grep_group_code', models.CharField(max_length=200, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('owned_by_school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='owned_subjects', to='mastery.school')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('estimated_at', models.DateTimeField(null=True)),
                ('mastery_value', models.IntegerField(null=True)),
                ('mastery_description', models.TextField(null=True)),
                ('feedforward', models.TextField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='mastery.user')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='mastery.subject')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Situation',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(null=True)),
                ('happens_at', models.DateTimeField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='school',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user'),
        ),
        migrations.AddField(
            model_name='school',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user'),
        ),
        migrations.AddField(
            model_name='role',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user'),
        ),
        migrations.AddField(
            model_name='role',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user'),
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('mastery_value', models.IntegerField(null=True)),
                ('mastery_description', models.TextField(null=True)),
                ('feedforward', models.TextField(null=True)),
                ('observed_at', models.DateTimeField(null=True)),
                ('is_visible_to_student', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='observations', to='mastery.goal')),
                ('observer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observations_performed', to='mastery.user')),
                ('situation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mastery.situation')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations_received', to='mastery.user')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
            ],
            options={
                'ordering': ['observed_at'],
            },
        ),
        migrations.CreateModel(
            name='MasterySchema',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('title', models.CharField(default='Navnløst mestringsskjema', max_length=200)),
                ('description', models.TextField(null=True)),
                ('config', models.JSONField(null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mastery_schemas', to='mastery.school')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='group',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user'),
        ),
        migrations.AddField(
            model_name='group',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='groups', to='mastery.school'),
        ),
        migrations.AddField(
            model_name='group',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='groups', to='mastery.subject'),
        ),
        migrations.AddField(
            model_name='group',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user'),
        ),
        migrations.AddField(
            model_name='goal',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user'),
        ),
        migrations.AddField(
            model_name='goal',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='goals', to='mastery.group'),
        ),
        migrations.AddField(
            model_name='goal',
            name='mastery_schema',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='goals', to='mastery.masteryschema'),
        ),
        migrations.AddField(
            model_name='goal',
            name='previous_goal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='mastery.goal'),
        ),
        migrations.AddField(
            model_name='goal',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='goals', to='mastery.user'),
        ),
        migrations.AddField(
            model_name='goal',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='goals', to='mastery.subject'),
        ),
        migrations.AddField(
            model_name='goal',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user'),
        ),
        migrations.CreateModel(
            name='DataMaintenanceTask',
            fields=[
                ('id', models.CharField(default=mastery.models.generate_nanoid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintained_at', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('finished', 'Finished'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('job_name', models.CharField(max_length=200)),
                ('job_params', models.JSONField(null=True)),
                ('display_name', models.CharField(max_length=200, null=True)),
                ('handler_name', models.CharField(max_length=200, null=True)),
                ('is_overwrite_enabled', models.BooleanField(default=False)),
                ('is_crash_on_error_enabled', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(null=True)),
                ('failed_at', models.DateTimeField(null=True)),
                ('finished_at', models.DateTimeField(null=True)),
                ('last_heartbeat_at', models.DateTimeField(null=True)),
                ('earliest_run_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('result', models.JSONField(null=True)),
                ('attempts', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to='mastery.user')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to='mastery.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='goal',
            constraint=models.CheckConstraint(check=models.Q(('group__isnull', False), ('student__isnull', False), _connector='OR'), name='goal_group_or_student'),
        ),
    ]
