services:
  postgres:
    image: postgres:15.3
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    profiles:
      - dev
      - prod

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    volumes:
      - ./adminer/dracula.css:/var/www/html/adminer-dark.css:ro
    depends_on:
      - postgres
    profiles:
      - dev
      - prod
    command:
      [
        'php',
        '-d',
        'post_max_size=500M',
        '-d',
        'upload_max_filesize=500M',
        '-S',
        '0.0.0.0:8080',
        '-t',
        '/var/www/html',
      ]

  backend:
    build: ./backend
    # Number of workers (w) should be (2 * CPU cores) + 1
    command:
      - bash
      - -c
      - |
        python manage.py migrate
        gunicorn asgi -b :8000 -w 9
    ports:
      - 8001:8000
    env_file:
      - ./backend/.env
    environment:
      DJANGO_DEBUG: 'False'
      DB_HOST: 'postgres'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    profiles:
      - prod
    restart: always
    depends_on:
      - postgres

  frontend:
    build: ./frontend
    ports:
      - 5000:80 # For local testing
      - 80:80
    depends_on:
      - backend
    volumes:
      - ./frontend/nginx:/etc/nginx/conf.d
    restart: always
    profiles:
      - prod

volumes:
  postgres-data:
    driver: local
