// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, urlSearchParamsBodySerializer } from '@hey-api/client-fetch';
import type { SchoolsListData, SchoolsListResponse, SchoolsCreateData, SchoolsCreateResponse, SchoolsDestroyData, SchoolsDestroyResponse, SchoolsRetrieveData, SchoolsRetrieveResponse, SchoolsPartialUpdateData, SchoolsPartialUpdateResponse, SchoolsUpdateData, SchoolsUpdateResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const schoolsList = <ThrowOnError extends boolean = false>(options?: Options<SchoolsListData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<SchoolsListResponse, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            },
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/schools/',
        ...options
    });
};

export const schoolsCreate = <ThrowOnError extends boolean = false>(options: Options<SchoolsCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SchoolsCreateResponse, unknown, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            },
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/schools/',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

export const schoolsDestroy = <ThrowOnError extends boolean = false>(options: Options<SchoolsDestroyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<SchoolsDestroyResponse, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            },
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/schools/{id}/',
        ...options
    });
};

export const schoolsRetrieve = <ThrowOnError extends boolean = false>(options: Options<SchoolsRetrieveData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<SchoolsRetrieveResponse, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            },
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/schools/{id}/',
        ...options
    });
};

export const schoolsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SchoolsPartialUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<SchoolsPartialUpdateResponse, unknown, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            },
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/schools/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

export const schoolsUpdate = <ThrowOnError extends boolean = false>(options: Options<SchoolsUpdateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<SchoolsUpdateResponse, unknown, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            },
            {
                scheme: 'basic',
                type: 'http'
            }
        ],
        url: '/schools/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};